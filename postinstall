#!/bin/bash

if [[ -f `pwd`/sharedfuncs ]]; then
  source sharedfuncs
else
  echo "missing file: sharedfuncs"
  exit 1
fi

check_root

print_line

check_connection


print_line

cecho "This Skript will install my lovely system"
cecho "Be sure that you want to install all the software"

print_line

cecho "A clean Arch installation is requested" 

pause_function

print_line



#create user
include_file "post_subitems/00_userinstall"

#install zsh and few basic components
include_file "post_subitems/01_basecomponents"

#install KDE Desktop
include_file "post_subitems/02_desktop"

#install accessories APPS (thinks that does not match the other categories :D ??)
include_file "post_subitems/03_accessories"

#install development APPS 
include_file "post_subitems/04_develoment"








cecho "Install gscan2pdf - Scan tool" 
aur_package_install "gscan2pdf"



print_info "Install filezilla"  
package_install "filezilla"








print_line

cecho "Install office APPS" 

#bücher
cecho "Install calibre"  
package_install "calibre"

#git docu
#cecho "Install haroopad"  
#aur_package_install "haroopad"


#cecho "Install remarkable"  
#aur_package_install "remarkable"


#finanze
cecho "Install homebank - finanze manager"  
package_install "homebank"


#latex
cecho "Install latex + texstudio"  
package_install "texlive-most texlive-lang texlive-bin texstudio"

#office
cecho "Install - https://wiki.archlinux.org/index.php/LibreOffice"
package_install "libreoffice-fresh"
package_install "libreoffice-fresh-de"
package_install "hunspell hunspell-de"
package_install "aspell aspell-de aspell-en"


#screenrecorder
cexho "Instally qt-recordmydesktop - screen recorder"
packafe_install "qt-recordmydesktop"

#ocr analyse
cecho "Install ocrfeeder"   #require aspell
package_install "ocrfeeder tesseract gocr"


#cecho "Install xmind - Mindmaps"   
#aur_package_install "xmind"

#cecho "Install Foxit pdf reader"   
#aur_package_install "foxitreader"

cecho "Install masterpdfeditor"   
aur_package_install "masterpdfeditor"

cecho "Install geogebra"   
aur_package_install "geogebra"

#cecho "Install yed"   
#aur_package_install "yed"


cecho "Install dia - uml tool"   
package_install "dia"

#cecho "Install dbvis - dbvison tool"
#aur_package_install "dbvis"

cecho "Install umbrello"   
package_install "umbrello"



cecho "Install electrum"   
package_install "electrum electrum-mona"

#only for mining
#cecho "Install bitcoin-qt" 
#aur_package_install "bitcoin-qt"  

cecho "Install bisq - bitcoin p2p market" 
aur_package_install "bisq-git"  


#cecho "Install matlab - huge math tool ~23GB" 
#aur_package_install "matlab"  


#aur_package_install "bitcoin-core"
#run_as_user "mkdir -p ~/.bitcoin" 
#run_as_user "cat > ~/.bitcoin/bitcoin.conf <<'EOF'                       ##
#rpcconnect=127.0.0.1                                          ##
#rpcport=8332                                                  ##
#rpcuser=bitcoin                                               ##
#rpcpassword=secret                                            ##
#EOF"

cecho "Install geogebra" 
aur_package_install "geogebra"  


cecho "Install xournal" 
aur_package_install "xournal"

#webcam
cecho "Install cheese" 
package_install "cheese"










print_line

cecho "Install system APPS" 

cecho "Install tool for dublicate files (fslint hat gui)"
package_install "rmlint"
aur_package_install "fslint"


#cecho "Install cockpit - Systemd web monitor"  #for servers
#aur_package_install "cockpit storaged linux-user-chroot ostree"  

cecho "Install firewalld - Firewall gui"
package_install "firewalld"
system_ctl enable firewalld


cecho "Install gparted - Partitionsmanager"
package_install "gparted"


cecho "Install grsync - Gui für Rsync"
package_install "grsync"



#cecho "Install hosts-update - Host file updater"
#aur_package_install "hosts-update"
#hosts-update


cecho "Install htop - Systemmonitor"
package_install "htop"


cecho "Install virtualbox "
package_install "virtualbox virtualbox-host-dkms virtualbox-guest-iso linux-headers"
aur_package_install "virtualbox-ext-oracle"
add_user_to_group $username vboxusers
modprobe vboxdrv vboxnetflt


cecho "Install netdata  - System informations"
package_install "netdata"
system_ctl enable netdata.service


#alterrnative für yaourt 
cecho "Install pacaur  - https://wiki.archlinux.org/index.php/AUR_helpers"
run_as_user "gpg --recv-keys 1EB2638FF56C0C53"
aur_package_install "pacaur"



#Update erinnerung
#cecho "Install aarchup  - https://wiki.archlinux.org/index.php/AUR_helpers"
#aur_package_install "aarchup" #notification-daemon
#    echo "# Comments are ignored
# The [main] line defines the group main
# You need to include this and no arguments
# can be placed before it.
# also notice that all options should be in the long form
# ie: for loop-time use only loop-time do not try to use 'l' or '-l'
#    [main]
# Argument on the left then '=' then the value of it
# ie:
#    loop-time=30
#    timeout=60
# Arguments without a value must have the '=' sign
# ie:
#    aur=" > "/etc/aarchup.conf"
#system_ctl enable aarchup.timer




cecho "Install wireshark  - https://wiki.archlinux.org/index.php/wireshark"
package_install "wireshark-qt"
add_user_to_group $username wireshark


cecho "Install trace-cmd ... kernel debug"
aur_package_install "trace-cmd"


cecho "Install grub-customizer  - https://wiki.archlinux.de/title/GRUB"
aur_package_install "grub-customizer"
#Theme: https://www.gnome-look.org/p/1111545/


#cecho "Install partitionmanager  - https://wiki.archlinux.org/index.php/partitioning#Partitioning_tools"
#package_install "partitionmanager"

cecho "Install gnome-disk-utility  - https://wiki.archlinux.org/index.php/partitioning#Partitioning_tools"
package_install "gnome-disk-utility"






#python moduls
#pip2 install beautifulsoup4
#pip2 install colorama
#pip2 install termcolor
#pip2 install flake8
#pip2 install jedi


package_install "python pyhton2 python-pip"
aur_package_install "python2-beautifulsoup4 python2-termcolor python2-gnupg python2-colorama python2-flake8 python2-jedi python-pynacl python-paramiko"
package_install "python2-numpy python-lxml"



read_input_text "Install Wacom suport - https://wiki.archlinux.org/index.php/wacom_tablet"
if [[ $OPTION == y ]]; then
    package_install "xf86-input-wacom libwacom" 
    aur_package_install "kcm-wacomtablet" 


fi


read_input_text "Install Tablet suport - https://wiki.archlinux.org/index.php/Tablet_PC"
if [[ $OPTION == y ]]; then
    aur_package_install "iio-sensor-proxy" 


fi


#plex - https://wiki.archlinux.org/index.php/Plex ?? Media center


cecho "Install hwinfo"
package_install "hwinfo"

cecho "Install HDD info"
package_install "smartmontools gsmartcontrol"


cecho "Install tree"
package_install "tree"

cecho "Install nmap"
package_install "nmap"

cecho "Install netcat"
package_install "netcat"


cecho "Install xclip"
package_install "xclip"

cecho "Install xbindkeys"
package_install "xbindkeys xbindkeys_config-gtk2"

cecho "Install putty"
package_install "putty"
aur_package_install "putty-freedesktop"


cecho "Install Aircrack-ng"
aur_package_install "pixiewps-git aircrack-ng reaver-wps-fork-t6x-git pyrit-git cowpatty wifite-git"


cecho "Install powertop"
package_install "powertop"

cecho "Install pkgfile"
package_install "pkgfile"


cecho "Install bind-tools"
package_install "bind-tools"

cecho "Install dnscrypt-proxy - https://wiki.archlinux.org/index.php/DNSCrypt#Unbound"
package_install "dnscrypt-proxy"

useradd -r -d /var/dnscrypt -m -s /sbin/nologin dnscrypt

#sed -i "s/Daemonize no/Daemonize yes/" /etc/dnscrypt-proxy.conf 
sed -i "s/# EDNSPayloadSize 1252/EDNSPayloadSize 4096/" /etc/dnscrypt-proxy.conf 
sed -i "s|ResolverName random|ResolverName d0wn-random-ns2|" /etc/dnscrypt-proxy.conf 
sed -i "s|# ResolversList /usr/local/share/dnscrypt-proxy/dnscrypt-resolvers.csv|ResolversList /usr/share/dnscrypt-proxy/dnscrypt-resolvers.csv|" /etc/dnscrypt-proxy.conf 
sed -i "s|LocalCache on|LocalCache off|" /etc/dnscrypt-proxy.conf 

#sed -i "s|#PidFile /var/run/dnscrypt-proxy.pid|PidFile /var/run/dnscrypt-proxy.pid|" /etc/dnscrypt-proxy.conf 
sed -i "s|# User _dnscrypt-proxy|User dnscrypt|" /etc/dnscrypt-proxy.conf 
sed -i "s|# MaxActiveRequests 250|MaxActiveRequests 250|" /etc/dnscrypt-proxy.conf 
#LocalAddress 127.0.0.1:5301



# User _dnscrypt-proxy
cp /etc/dnscrypt-proxy.conf /etc/dnscrypt-proxy2.conf 
#sed -i "s|PidFile /var/run/dnscrypt-proxy.pid|PidFile /var/run/dnscrypt-proxy2.pid|" /etc/dnscrypt-proxy2.conf 
sed -i "s|ResolverName d0wn-random-ns2|ResolverName dnscrypt.nl-ns0|" /etc/dnscrypt-proxy2.conf 
#LocalAddress 127.0.0.1:5302



sed -i "s/ListenStream=127.0.0.1:53/ListenStream=127.0.0.1:5301/" /usr/lib/systemd/system/dnscrypt-proxy.socket
sed -i "s/ListenDatagram=127.0.0.1:53/ListenDatagram=127.0.0.1:5301/" /usr/lib/systemd/system/dnscrypt-proxy.socket

cp /usr/lib/systemd/system/dnscrypt-proxy.socket /usr/lib/systemd/system/dnscrypt-proxy2.socket
cp /usr/lib/systemd/system/dnscrypt-proxy.service /usr/lib/systemd/system/dnscrypt-proxy2.service


sed -i "s/ListenStream=127.0.0.1:5301/ListenStream=127.0.0.1:5302/" /usr/lib/systemd/system/dnscrypt-proxy2.socket
sed -i "s/ListenDatagram=127.0.0.1:5301/ListenDatagram=127.0.0.1:5302/" /usr/lib/systemd/system/dnscrypt-proxy2.socket
sed -i "s/Requires=dnscrypt-proxy.socket/Requires=dnscrypt-proxy2.socket/" /usr/lib/systemd/system/dnscrypt-proxy2.service
sed -i "s/Also=dnscrypt-proxy.socket/Also=dnscrypt-proxy2.socket/" /usr/lib/systemd/system/dnscrypt-proxy2.service
sed -i "s|ExecStart=/usr/bin/dnscrypt-proxy /etc/dnscrypt-proxy.conf|ExecStart=/usr/bin/dnscrypt-proxy /etc/dnscrypt-proxy2.conf|" /usr/lib/systemd/system/dnscrypt-proxy2.service




#firewall-cmd --zone=public --permanent --add-port=443/udp

#aktuallisiere dnscrypt-resolvers.csv
wget https://raw.githubusercontent.com/jedisct1/dnscrypt-proxy/master/dnscrypt-resolvers.csv -O /usr/share/dnscrypt-proxy/dnscrypt-resolvers.csv 

system_ctl enable dnscrypt-proxy.service
system_ctl enable dnscrypt-proxy2.service







cecho "Install unbound - https://wiki.archlinux.org/index.php/unbound"
package_install "unbound expat"

echo '
server:
    # The following line will configure unbound to perform cryptographic
    # DNSSEC validation using the root trust anchor.
    auto-trust-anchor-file: trusted-key.key
server:
    #access-control: 10.8.0.0/24 allow
    #logfile: "/var/log/unbound.log"
    log-time-ascii: yes
    module-config: "iterator"
    do-not-query-localhost: no
    interface: 127.0.0.1
    #interface: 10.8.0.1
    access-control: 127.0.0.1 allow
    #access-control: 10.8.0.1/24 allow
forward-zone:
   name: "."
   forward-addr: 127.0.0.1@5301
   forward-addr: 127.0.0.1@5302
   forward-first: no

remote-control:
control-enable: no' > /etc/unbound/unbound.conf
chown root:unbound /etc/unbound
chmod 775 /etc/unbound


echo '
# Configuration for resolvconf(8)
# See resolvconf.conf(5) for details

resolv_conf=/etc/resolv.conf
# If you run a local name server, you should uncomment the below line and
# configure your subscribers configuration files below.
name_servers=127.0.0.1' > /etc/resolvconf.conf

system_ctl enable unbound.service


print_line

cecho "Install graphics APPS" 

cecho "Install gimp" 
package_install "gimp"

#cecho "Install inkscape - Vektrografiken" 
#package_install "inkscape"

cecho "Install mypaint" 
package_install "mypaint" 

cecho "Install simple-scan" 
package_install "simple-scan"

cecho "Install krita" 
package_install "krita"



print_line

cecho "Install browser" 



cecho "Install chromium" 
package_install "chromium"

cecho "Install firefox" 
package_install "firefox firefox-i18n-de"

cecho "Install tor-browser" 
run_as_user "gpg --recv-keys D1483FA6C3C07136"
package_install "tor-browser-de"


cecho "Install links"  
package_install "links"




print_line

cecho "Install DOWNLOAD tools" 

cecho "Install deluge - bittorrent client" 
package_install "deluge"

#cecho "Install rslsync - bittorrent sync" 
#aur_package_install "rslsync"



cecho "Install JDownlaoder2" 
aur_package_install "jdownloader2"


cecho "owncloud client"
package_install "owncloud-client"




print_line

cecho "Install email tools" 


cecho "Install thunderbird" 
package_install "thunderbird"
package_install "thunderbird-i18n-de"

cecho "Install liferea" 
package_install "liferea"








print_line

cecho "Install im" 


cecho "Install konversation" 
package_install "konversation"


cecho "Install skype" 
aur_package_install "skypeforlinux-bin"


cecho "Install teamspeak3" 
package_install "teamspeak3"

cecho "Install gajim" 
package_install "gajim gajim-plugin-omemo"



cecho "Install qtox" 
aur_package_install "qtox-git"










print_line

cecho "Install Mapping Tools" 


cecho "Install google-earth" 
aur_package_install "google-earth"






print_line

cecho "Install RAT"  
#package_install "remmina"    #Remote desktop







print_line

cecho "Install Audio Tools" 


print_line
cecho "Install Audio player" 
aur_package_install "mpv"


cecho "Install spotify" 
aur_package_install "spotify"





print_line
cecho "Install Audio editor" 



cecho "Install audacity" 
package_install "audacity"



print_line
cecho "Install Audio Codecs"

package_install "gst-plugins-base gst-plugins-base-libs gst-plugins-good gst-plugins-bad gst-plugins-ugly gst-libav"

package_install "phonon-qt5-gstreamer"
# Use the 'standard' preset by default. This preset should generally be
# transparent to most people on most music and is already quite high in quality.
# The resulting bitrate should be in the 170-210kbps range, according to music
# complexity.
#run_as_user "gconftool-2 --type string --set /system/gstreamer/0.10/audio/profiles/mp3/pipeline '\audio/x-raw-int,rate=44100,channels=2 ! lame name=enc preset=1001 ! id3v2mux'"










print_line
cecho "Install VIDEO APPS" 


cecho "Install vlc"
package_install "vlc"
package_install "phonon-qt5-vlc"



print_line
cecho "Install Games" 


cecho "Install ddnet"
aur_package_install "ddnet"











print_line 




read -p "Finish up - Press enter to continue"

print_line
cecho "Set System Time"
timedatectl set-local-rtc true

system_ctl enable systemd-timesyncd.service
system_ctl start systemd-timesyncd.service



#setup global menu maybe 
#aur_package_install "gtk2-appmenu gtk3-appmenu" 
#aur_package_install "appmenu-qt appmenu-gtk"
#aur_package_install "kdeplasma-applets-menubar" 




cecho "CLEAN ORPHAN PACKAGES - https://wiki.archlinux.org/index.php/Pacman/Tips_and_tricks#Removing_unused_packages_.28orphans.29" 

pacman -Rns $(pacman -Qtdq)
pacman-optimize


#load config from git



print_line
print_line
cecho "\n\n" 

cecho "Finish :)" 
cecho "Please reboot and enjoy" 
