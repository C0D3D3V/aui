#!/bin/bash


print_title "Install system APPS"



#TOMUCH
#Tools (Utils)
#print_info "Install tool for dublicate files (fslint hat gui)"
#package_install "rmlint"
#aur_package_install "fslint"

#TOMUCH
#print_info "Install gparted - Partitionsmanager"
#package_install "gparted"

cecho "Install truecrypt"
package_install "truecrypt"





if [ $isServer == "n" ]; then
    
    print_info "Install grsync - Gui für Rsync"
    package_install "grsync"


    #cecho "Install seafile-client"
    #aur_package_install "seafile-client"

    #TOMUCH
    #cecho "Install syncthing"
    #package_install "syncthing"






    print_info "Install wireshark  - https://wiki.archlinux.org/index.php/wireshark"
    package_install "wireshark-qt"
    #package_install "wireshark-gtk"  #for gnome
    add_user_to_group $username wireshark


    print_info "Install ettercap"
    package_install "ettercap-gtk"



    #print_info "Install trace-cmd ... kernel debug"
    #aur_package_install "trace-cmd"


    print_info "Install grub-customizer  - https://wiki.archlinux.de/title/GRUB"
    aur_package_install "grub-customizer"
    #Theme: https://www.gnome-look.org/p/1111545/


    #cecho "Install partitionmanager  - https://wiki.archlinux.org/index.php/partitioning#Partitioning_tools"
    #package_install "partitionmanager"

    #print_info "Install gnome-disk-utility  - https://wiki.archlinux.org/index.php/partitioning#Partitioning_tools"
    #package_install "gnome-disk-utility"







    print_info "Install gdb with peda"
    package_install "gdb peda"

fi






print_info "Install pv - A terminal-based tool for monitoring the progress of data through a pipeline"
package_install "pv"

print_info "Install lsof"
package_install "lsof"

print_info "Install nasm"
package_install "nasm"

print_info "Install radare2"
package_install "radare2"

print_info "Install strace ltrace"
package_install "strace ltrace"
 
print_info "Install traceroute"
package_install "traceroute"

print_info "Install whois"
package_install "whois"

print_info "Install gdisk"
package_install "gptfdisk"

print_info "Install arch-install-scripts"
package_install "arch-install-scripts"
















#Monitor

#cecho "Install cockpit - Systemd web monitor"  #for servers
#aur_package_install "cockpit storaged linux-user-chroot ostree"  




print_info "Install htop - Systemmonitor"
package_install "htop"


#print_info "Install netdata  - System informations"
#package_install "netdata"
#system_ctl enable netdata.service



#plex - https://wiki.archlinux.org/index.php/Plex ?? Media center





#print_info "Install putty"
#package_install "putty"
#aur_package_install "putty-freedesktop"


if [ $isServer == "n" ]; then

    if [ $wifiPenTools == "n" ]; then
    
	print_info "Install Aircrack-ng"
	package_install "aircrack-ng cowpatty"
	aur_package_install "reaver-wps-fork-t6x pyrit-git wifite-git" #pixiewps-git  #reaver-wps-fork-t6x-git
    fi


    print_info "Install sslstrip"
    package_install "sslstrip"
fi





#TOMUCH
##System
#
##realy this firewall is only a try ...
##NOTMARCEL
#print_info "Install firewalld - Firewall gui"
#package_install "firewalld"
#system_ctl enable firewalld



#cecho "Install hosts-update - Host file updater"
#aur_package_install "hosts-update"
#hosts-update



if [ $isServer == "n" ]; then
    
    print_info "Install virtualbox "
    package_install "virtualbox linux-headers virtualbox-guest-iso" #virtualbox-host-modules-arch
    aur_package_install "virtualbox-ext-oracle"
    add_user_to_group $username vboxusers
    modprobe vboxdrv vboxnetflt


    #TOMUCH
    #print_info "Install VMware Horizon Client"
    ##fix package bugs -.-
    #run_as_user "gpg --recv-keys D5E9E43F7DF9EE8C"
    #aur_package_install "gstreamer0.10-base"
    #aur_package_install "openssl098"
    ##end of fix
    #aur_package_install "vmware-horizon-client" #VMware Horizon Client connect to VMware Horizon virtual desktop







    #alterrnative für yaourt 
    #print_info "Install pacaur  - https://wiki.archlinux.org/index.php/AUR_helpers"
    #run_as_user "gpg --recv-keys 1EB2638FF56C0C53"
    #aur_package_install "pacaur"






    #Update erinnerung
    #cecho "Install aarchup  - https://wiki.archlinux.org/index.php/AUR_helpers"
    #aur_package_install "aarchup" #notification-daemon
    #    echo "# Comments are ignored
    # The [main] line defines the group main
    # You need to include this and no arguments
    # can be placed before it.
    # also notice that all options should be in the long form
    # ie: for loop-time use only loop-time do not try to use 'l' or '-l'
    #    [main]
    # Argument on the left then '=' then the value of it
    # ie:
    #    loop-time=30
    #    timeout=60
    # Arguments without a value must have the '=' sign
    # ie:
    #    aur=" > "/etc/aarchup.conf"
    #system_ctl enable aarchup.timer



fi



#python moduls
#pip2 install beautifulsoup4
#pip2 install colorama
#pip2 install termcolor
#pip2 install flake8
#pip2 install jedi

print_info "Install Python"
package_install "python python2 python-pip"
aur_package_install "python2-beautifulsoup4 python2-termcolor python2-gnupg python2-colorama  python2-jedi" #python2-flake8 python-pynacl python-paramiko"
package_install "python2-numpy python-lxml python2-gobject"





print_info "Install xclip"
package_install "xclip"



if [ $isServer == "n" ]; then
    print_info "Install xbindkeys"
    package_install "xbindkeys"
    #aur_package_install "xbindkeys_config-gtk2"

fi


if [ $isServer == "n" ]; then

    #System Suport.... Driver
    #NOTMARCEL
    if [[ $wacomSupport == y ]]; then
	print_info "Install Wacom suport - https://wiki.archlinux.org/index.php/wacom_tablet"
	package_install "xf86-input-wacom libwacom" 
	aur_package_install "kcm-wacomtablet" 
    fi

    #NOTMARCEL
    if [[ $tebletSupport == y ]]; then
	print_info "Install Tablet suport - https://wiki.archlinux.org/index.php/Tablet_PC"
	aur_package_install "iio-sensor-proxy" 
    fi

fi




#System Information
print_info "Install hwinfo and hardinfo"
package_install "hwinfo hardinfo"


if [ $isServer == "n" ]; then
    print_info "Install HDD info"
    package_install "smartmontools gsmartcontrol"

fi

print_info "Install tree"
package_install "tree"

print_info "Install nmap"
package_install "nmap"

print_info "Install gnu-netcat"
package_install "gnu-netcat"


if [ $isServer == "n" ]; then
    print_info "Install powertop"
    package_install "powertop"
fi


print_info "Install pkgfile"
package_install "pkgfile"


print_info "Install bind-tools"
package_install "bind-tools"




if [ $isServer == "n" ]; then
    print_info "Install smartcard things"
    package_install "ccid pcsc-tools opensc"

fi







#OUTDATE
##System DNS
#print_info "Install dnscrypt-proxy - https://wiki.archlinux.org/index.php/DNSCrypt#Unbound"
#package_install "dnscrypt-proxy"
#
#useradd -r -d /var/dnscrypt -m -s /sbin/nologin dnscrypt
#
##sed -i "s/Daemonize no/Daemonize yes/" /etc/dnscrypt-proxy.conf 
#sed -i "s/# EDNSPayloadSize 1252/EDNSPayloadSize 4096/" /etc/dnscrypt-proxy.conf 
#sed -i "s|ResolverName random|ResolverName d0wn-random-ns2|" /etc/dnscrypt-proxy.conf 
#sed -i "s|# ResolversList /usr/local/share/dnscrypt-proxy/dnscrypt-resolvers.csv|ResolversList /usr/share/dnscrypt-proxy/dnscrypt-resolvers.csv|" /etc/dnscrypt-proxy.conf 
#sed -i "s|LocalCache on|LocalCache off|" /etc/dnscrypt-proxy.conf 
#
##sed -i "s|#PidFile /var/run/dnscrypt-proxy.pid|PidFile /var/run/dnscrypt-proxy.pid|" /etc/dnscrypt-proxy.conf 
#sed -i "s|# User _dnscrypt-proxy|User dnscrypt|" /etc/dnscrypt-proxy.conf 
#sed -i "s|# MaxActiveRequests 250|MaxActiveRequests 250|" /etc/dnscrypt-proxy.conf 
##LocalAddress 127.0.0.1:5301
#
#
#
## User _dnscrypt-proxy
#cp /etc/dnscrypt-proxy.conf /etc/dnscrypt-proxy2.conf 
##sed -i "s|PidFile /var/run/dnscrypt-proxy.pid|PidFile /var/run/dnscrypt-proxy2.pid|" /etc/dnscrypt-proxy2.conf 
#sed -i "s|ResolverName d0wn-random-ns2|ResolverName dnscrypt.nl-ns0|" /etc/dnscrypt-proxy2.conf 
##LocalAddress 127.0.0.1:5302
#
#
#
#sed -i "s/ListenStream=127.0.0.1:53/ListenStream=127.0.0.1:5301/" /usr/lib/systemd/system/dnscrypt-proxy.socket
#sed -i "s/ListenDatagram=127.0.0.1:53/ListenDatagram=127.0.0.1:5301/" /usr/lib/systemd/system/dnscrypt-proxy.socket
#
#cp /usr/lib/systemd/system/dnscrypt-proxy.socket /usr/lib/systemd/system/dnscrypt-proxy2.socket
#cp /usr/lib/systemd/system/dnscrypt-proxy.service /usr/lib/systemd/system/dnscrypt-proxy2.service
#
#
#sed -i "s/ListenStream=127.0.0.1:5301/ListenStream=127.0.0.1:5302/" /usr/lib/systemd/system/dnscrypt-proxy2.socket
#sed -i "s/ListenDatagram=127.0.0.1:5301/ListenDatagram=127.0.0.1:5302/" /usr/lib/systemd/system/dnscrypt-proxy2.socket
#sed -i "s/Requires=dnscrypt-proxy.socket/Requires=dnscrypt-proxy2.socket/" /usr/lib/systemd/system/dnscrypt-proxy2.service
#sed -i "s/Also=dnscrypt-proxy.socket/Also=dnscrypt-proxy2.socket/" /usr/lib/systemd/system/dnscrypt-proxy2.service
#sed -i "s|ExecStart=/usr/bin/dnscrypt-proxy /etc/dnscrypt-proxy.conf|ExecStart=/usr/bin/dnscrypt-proxy /etc/dnscrypt-proxy2.conf|" /usr/lib/systemd/system/dnscrypt-proxy2.service
#
#
#
#
##firewall-cmd --zone=public --permanent --add-port=443/udp
#
##aktuallisiere dnscrypt-resolvers.csv
#wget https://raw.githubusercontent.com/jedisct1/dnscrypt-proxy/master/dnscrypt-resolvers.csv -O /usr/share/dnscrypt-proxy/dnscrypt-resolvers.csv 
#
#system_ctl enable dnscrypt-proxy.service
#system_ctl enable dnscrypt-proxy2.service
#
#
#
#
#
#
#
#print_info "Install unbound - https://wiki.archlinux.org/index.php/unbound"
#package_install "unbound expat"
#
#echo '
#server:
#    # The following line will configure unbound to perform cryptographic
#    # DNSSEC validation using the root trust anchor.
#    auto-trust-anchor-file: trusted-key.key
#server:
#    #access-control: 10.8.0.0/24 allow
#    #logfile: "/var/log/unbound.log"
#    log-time-ascii: yes
#    module-config: "iterator"
#    do-not-query-localhost: no
#    interface: 127.0.0.1
#    #interface: 10.8.0.1
#    access-control: 127.0.0.1 allow
#    #access-control: 10.8.0.1/24 allow
#forward-zone:
#   name: "."
#   forward-addr: 127.0.0.1@5301
#   forward-addr: 127.0.0.1@5302
#   forward-first: no
#
#remote-control:
#control-enable: no' > /etc/unbound/unbound.conf
#chown root:unbound /etc/unbound
#chmod 775 /etc/unbound
#
#
#echo '
## Configuration for resolvconf(8)
## See resolvconf.conf(5) for details
#
#resolv_conf=/etc/resolv.conf
## If you run a local name server, you should uncomment the below line and
## configure your subscribers configuration files below.
#name_servers=127.0.0.1' > /etc/resolvconf.conf
#
#system_ctl enable unbound.service





