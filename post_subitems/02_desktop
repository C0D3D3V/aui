#!/bin/bash


print_title "Install Desktop"

if [ $isServer == "n" ]; then
    print_info "Install XORG - https://wiki.archlinux.org/index.php/Xorg" 

    package_install "xorg-server xorg-xinit xorg-apps xf86-input-libinput" #xorg-server-xwayland

    # xorg-server - xorg basis
    # xorg-apps - konfig tools
    # xorg-xinit - start mit startx xorg
    # xf86-input-libinput - default Input treiber

    package_install "mesa"
    modprobe uinput
    # mesa = opengl treiber - default grafik treiber






    print_line

    print_info "Install FONTS CONFIGURATION - https://wiki.archlinux.org/index.php/Font_Configuration" 

    package_install "fontconfig freetype2"

    # fontconfig - gibt eine liste der verfügbaren fonts
    # freetype2 - rendert die fonts 

    #pause_function

    print_line





    if [[ $tplManager == y ]]; then
	print_info "Install TLP - https://wiki.archlinux.org/index.php/Tlp" 

	package_install "tlp "
	# power saving methoden ... spart akku

	if [[ $lenovoTplManager == y ]]; then
	    package_install "acpi_call" # für neue Lenovo modelle 
	    
	    #package_install "tp_smapi" # eig. für recalibration etc.
	fi

	system_ctl enable tlp
	system_ctl enable tlp-sleep
	system_ctl disable systemd-rfkill
	tlp start
    fi









    print_line

    # Installation der wichtigen Video Card Treiber ... bisher keine Probleme damit ... bei High-End Grakas evtl. genauer hinschauen
    
    print_info "Install VIDEO CARD Driver" 
    VIDEO_DRIVER=""
    ARCHI=`uname -m` # ARCHITECTURE
    check_vga() {
	local _vga=`lspci | grep VGA | tr "[:upper:]" "[:lower:]"`
	local _vga_length=`lspci | grep VGA | wc -l`
	if [[ -n $(echo ${_vga} | grep "nvidia") || -f /sys/kernel/debug/dri/0/vbios.rom ]]; then
	    cecho Nvidia 
	    VIDEO_DRIVER="nvidia"
	elif [[ -n $(echo ${_vga} | grep "advanced micro devices") || -f /sys/kernel/debug/dri/0/radeon_pm_info || -f /sys/kernel/debug/dri/0/radeon_sa_info ]]; then
	    cecho AMD/ATI
	    VIDEO_DRIVER="ati"
	elif [[ -n $(echo ${_vga} | grep "intel corporation") || -f /sys/kernel/debug/dri/0/i915_capabilities ]]; then
	    cecho Intel
	    VIDEO_DRIVER="intel"
	fi
    }


    check_vga
    if [[ ${VIDEO_DRIVER} == nvidia ]]; then
	package_install "nvidia nvidia-utils"
	[[ ${ARCHI} == x86_64 ]] && package_install "lib32-nvidia-utils"
	nvidia-xconfig --add-argb-glx-visuals --allow-glx-with-composite --composite --render-accel -o /etc/X11/xorg.conf.d/20-nvidia.conf;
    elif [[ ${VIDEO_DRIVER} == ati ]]; then
	package_install "xf86-video-ati mesa-libgl mesa-vdpau libvdpau-va-gl"

    elif [[ ${VIDEO_DRIVER} == intel ]]; then
	package_install "xf86-video-intel mesa-libgl libvdpau-va-gl"
    fi

    if [[ ${ARCHI} == x86_64 ]]; then
	is_package_installed "mesa-libgl" && package_install "lib32-mesa-libgl"
	is_package_installed "mesa-vdpau" && package_install "lib32-mesa-vdpau"
    fi

    if is_package_installed "libvdpau-va-gl"; then
	add_line "export VDPAU_DRIVER=va_gl" "/etc/profile"
    fi

    print_line



    

    print_info "Install CUPS - https://wiki.archlinux.org/index.php/Cups" 
    package_install "cups cups-filters ghostscript gsfonts"
    package_install "gutenprint foomatic-db foomatic-db-engine foomatic-db-nonfree foomatic-db-ppds foomatic-db-nonfree-ppds hplip splix cups-pdf foomatic-db-gutenprint-ppds" #foomatic-filters-lprng
    system_ctl enable org.cups.cupsd.service

    # cups - drucker server
    # cups-filter - alte backends
    # gohstscript - druckt alles was nicht postscript kann
    # gsfonts - core font set

    # gutenprint - treiber für die meisten drucker --- wichtig nach jedem update "cups-genppdupdate" ausführen
    # foomatic-db-...-ppds - prebuild ppds (postscript print descriptions)
    # cups-pdf - zum drucken in pdf files
    # Foomatic - generell alles mit ppd files
    # hplip - mehr treiber (HP, DeskJet ... )
    # splix - samsung treiber


    print_info "Install Printer driver"
    #Canon MX920
    aur_package_install "cups-bjnp cnijfilter-mx920 scangearmp2"
    #Samsunf
    aur_package_install "samsung-unified-driver"

    # cups-bjnp - canon printer
    # mx920 - mein drucker treiber
    # samsung-unified-driver - mehr samsung treiber
    # scangearmp2 - canon scan treiber
    

    print_line







    print_info "Install synaptics - https://wiki.archlinux.de/title/Synaptics_Touchpad_Treiber" 
    package_install "xf86-input-synaptics"

    # Touchpad support

    print_line





    print_info "Install Fonts - https://wiki.archlinux.org/index.php/fonts" 
    package_install "noto-fonts-emoji ttf-dejavu ttf-liberation ttf-bitstream-vera ttf-hack wqy-microhei noto-fonts-cjk ttf-symbola nerd-fonts-complete"
    #aur_package_install "ttf-fira-code " #ttf-google-fonts-git  

    # Noch mehr Fonts
    # noto-fonts-emoji - Google's own emoji font
    # ttf-dejavu - Bitstream Vera modified for greater Unicode coverage
    # ttf-liberation -  free metric-compatible substitute for the Arial ... Windows Fonts
    # ttf-bitstream-vera - serif, sans-serif, and monospace
    # ttf-hack - monospaced font, used as the default in KDE Plasma
    # wqy-microhei - high quiality sans-serif style
    # noto-fonts-cjk - Large collection of fonts for asia languages
    # ttf-symbola - provides many Unicode symbols
    # nerd-fonts-complete - 40+ patched fonts... common hack fonts
    




    print_line
    print_info "Install I3 - https://wiki.archlinux.org/index.php/I3" 

    package_install "sddm"
    # sddm Diplay manager - Login Maske

    #framework
    package_install "kf5"

 
    # drop down trerminal
    package_install "guake"

    # legendäre tmux ... Mehrere Terminals in einem ... nice
    print_info "Install tmux - Terminal multiplexer"   
    package_install "tmux"



    #dark design
    package_install "arc-kde arc-gtk-theme"
    aur_package_install "papirus-icon-theme"

    
    #config sddm
    system_ctl enable sddm
    sddm --example-config > /etc/sddm.conf
    sed -i 's/Current=/Current=breeze/' /etc/sddm.conf
    sed -i 's/CursorTheme=/CursorTheme=breeze_cursors/' /etc/sddm.conf
    sed -i 's/Numlock=none/Numlock=on/' /etc/sddm.conf

 



    print_line










    print_info "Install Networkmanager - https://wiki.archlinux.org/index.php/Networkmanager"  
    package_install "networkmanager dnsmasq plasma-nm networkmanager-qt"
    #is dependency of gnome but not of kde maybe

    # vpn support
    package_install "networkmanager-openconnect networkmanager-openvpn networkmanager-pptp networkmanager-vpnc" # pulse-secure webkitgtk
    #my university use openconnect

    # auto update datetime from network
    if is_package_installed "ntp"; then
	package_install "networkmanager-dispatcher-ntpd"
	system_ctl enable NetworkManager-dispatcher.service
    fi

    is_package_installed "tlp" && package_install "tlp-rdw"

    system_ctl enable NetworkManager.service





fi

#pause_function

