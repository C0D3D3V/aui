#!/bin/bash

#######################################
# VARIABLES:
# Change them to your wishes

# Country (for mirror servers)
COUNTRY="Germany"

# /etc/hostname
HOSTNAME="archlinux"

# keyboard layout
KEYMAP="de-latin1"

# "How should the new user be named? [Recomended: yourName]"
NEWUSER="arch"

# Password for new user [Default: same as the name]
NEWUSER_PW="${NEWUSER}"

# root password [Default: same as new user]
ROOT_PW="${NEWUSER}"

# name of device mapper
DM_NAME="cryptroot"

#######################################

if [[ -f $(pwd)/sharedfuncs ]]; then
  source sharedfuncs
else
  echo "Missing file: sharedfuncs"
  exit 1
fi

check_root
check_boot_system

print_info "Load german keymap [https://wiki.archlinux.org/index.php/Keyboard_configuration_in_console]"
loadkeys "$KEYMAP"

print_info "Set font to sun12x22"
setfont sun12x22

check_connection

print_title "This script will install Arch Linux"


print_line
package_install "pacman-contrib reflector"

# Mirrorlist
print_title "Backup pacman mirrorlist and filter for $COUNTRY servers [https://wiki.archlinux.org/index.php/mirrors]"
mv -i /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.orig
reflector --country "$COUNTRY" --age 12 --completion-percent 70 --protocol https --sort rate --verbose --save /etc/pacman.d/mirrorlist


grep "^[^#]" /etc/pacman.d/mirrorlist | head -10
ls /etc/pacman.d/ -la


print_line
print_title "Create boot device"
select_device

print_info "Create partitions [https://wiki.archlinux.de/title/GPT]"

warn_erasing
sgdisk -Z "$BOOT_MOUNTPOINT"

if [ "$UEFI" == 1 ]; then

  cecho "Create efi partition: type EF00, size 500M"
  sgdisk -n 0:0:+500M -t 0:ef00 -c 0:"efi" "$BOOT_MOUNTPOINT"

  cecho "Create root partition: type 8300"
  sgdisk -n 0:0:0 -t 0:8300 -c 0:"main" "$BOOT_MOUNTPOINT"

else

  cecho "Create boot partition: type EF02, size 3M"
  sgdisk -n 0:0:+3M -t 0:ef02 -c 0:"bios" "$BOOT_MOUNTPOINT"

  cecho "Create boot partition: type 8300, size 500M"
  sgdisk -n 0:0:+500M -t 0:8300 -c 0:"boot" "$BOOT_MOUNTPOINT"

  cecho "Create root partition: type 8300"
  sgdisk -n 0:0:0 -t 0:8300 -c 0:"main" "$BOOT_MOUNTPOINT"

fi

sgdisk -p "$BOOT_MOUNTPOINT"

print_line

# select boot and luks partitions
if [[ $UEFI == 1 ]]; then
  BOOT_DISK=${BOOT_MOUNTPOINT}1
  LUKS_DISK=${BOOT_MOUNTPOINT}2
else
  BOOT_DISK=${BOOT_MOUNTPOINT}2
  LUKS_DISK=${BOOT_MOUNTPOINT}3
fi


print_title "Setup LUKS [https://wiki.archlinux.org/index.php/Dm-crypt]"
print_title "Using a keyfile in initramfs [https://wiki.archlinux.org/index.php/Dm-crypt/Device_encryption#With_a_keyfile_embedded_in_the_initramfs]"

modprobe dm-crypt

dd bs=512 count=4 if=/dev/random of=crypto_keyfile.bin iflag=fullblock
chmod 600 crypto_keyfile.bin

cryptsetup -c aes-xts-plain64 -y -s 512 --use-random --batch-mode luksFormat "$LUKS_DISK" crypto_keyfile.bin
cryptsetup open --type luks "$LUKS_DISK" "$DM_NAME" --key-file crypto_keyfile.bin


print_line
print_title "Create file system [https://wiki.archlinux.org/index.php/file_systems]"

mkfs.ext4 -L root /dev/mapper/${DM_NAME}

mkfs.fat -F32 -n boot "$BOOT_DISK"


print_info "Mount file system [https://wiki.archlinux.de/title/Mounten]"

mount /dev/mapper/${DM_NAME} /mnt

cp crypto_keyfile.bin /mnt/crypto_keyfile.bin
mkdir /mnt/boot

mount "$BOOT_DISK" /mnt/boot


print_title "Install system [https://wiki.archlinux.org/index.php/Install_from_existing_Linux]"
pacstrap /mnt base base-devel linux-firmware linux gvim zsh efibootmgr intel-ucode git dhcpcd netctl dialog wpa_supplicant

print_info "Activate swap [https://wiki.archlinux.org/index.php/Swap]"

swapSize=$(($(free --byte | awk 'FNR==2{print $2}') / 2))

fallocate -l ${swapSize} /mnt/swapfile
chmod 600 /mnt/swapfile
mkswap /mnt/swapfile
swapon /mnt/swapfile


echo vm.swappiness=5 | tee -a /mnt/etc/sysctl.d/99-sysctl.conf
echo vm.vfs_cache_pressure=50 | tee -a /mnt/etc/sysctl.d/99-sysctl.conf


print_info "Generate fstab [https://wiki.archlinux.org/index.php/fstab]"

genfstab -pU /mnt >>/mnt/etc/fstab

add_line "none /tmp tmpfs defaults,noatime,mode=1777 0 0" "/mnt/etc/fstab"

swapoff -a

print_info "Edit makepkg.conf [https://wiki.archlinux.org/index.php/makepkg#tmpfs]"

sed -i "s|#BUILDDIR=/tmp/makepkg|BUILDDIR=/tmp/makepkg|" /mnt/etc/makepkg.conf
sed -i "s|PKGEXT='.pkg.tar.xz'|PKGEXT='.pkg.tar.zst'|" /mnt/etc/makepkg.conf
sed -i "s|COMPRESSZST=(zstd -c -z -q -)|COMPRESSZST=(zstd -c -q -T0 -18 -)|" /mnt/etc/makepkg.conf

echo "MAKEFLAGS='-j$(nproc)'" >>/mnt/etc/makepkg.conf
print_info "Generate vconsole [https://wiki.archlinux.org/index.php/Keyboard_configuration_in_console]"

echo "KEYMAP=de-latin1" >/mnt/etc/vconsole.conf
echo "FONT=sun12x22" >>/mnt/etc/vconsole.conf


print_info "Generate locales [https://wiki.archlinux.org/index.php/Locale]"

sed -i "s/#de_DE.UTF-8 UTF-8/de_DE.UTF-8 UTF-8/" /mnt/etc/locale.gen
sed -i "s/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/" /mnt/etc/locale.gen
arch_chroot "locale-gen"

cecho "Set locale [https://wiki.archlinux.org/index.php/locale]"
echo "LANG=de_DE.UTF-8" >/mnt/etc/locale.conf


print_info "Set hostname [https://wiki.archlinux.org/index.php/Network_configuration#Set_the_hostname]"
echo $HOSTNAME >/mnt/etc/hostname

print_info "Generate journalctrl config [https://wiki.archlinux.org/index.php/Systemd#Journal]"

sed -i "s/#Storage=auto/Storage=persistent/" /mnt/etc/systemd/journald.conf
sed -i "s/#SystemMaxUse=/SystemMaxUse=1G/" /mnt/etc/systemd/journald.conf


print_info "Generate time zone [https://wiki.archlinux.org/index.php/Time#Time_zone]"
arch_chroot "ln -sf /usr/share/zoneinfo/Europe/Berlin /etc/localtime"

print_info "Setup hardware clock - hardware is set to UTC [https://wiki.archlinux.org/index.php/Time]"
arch_chroot "hwclock --systohc --utc"

print_info "Deaktivate beep"
echo "blacklist pcspkr" >/mnt/etc/modprobe.d/nobeep.conf

print_info "Activate multilib  [https://wiki.archlinux.org/index.php/multilib]"

sed -i "/\[multilib\]/,/Include/"'s/^#//' /mnt/etc/pacman.conf
sed -i 's/#Color/Color/' /mnt/etc/pacman.conf


print_info "Copy mirrorlist"

cp /etc/pacman.d/mirrorlist /mnt/etc/pacman.d/mirrorlist
cp /etc/pacman.d/mirrorlist.orig /mnt/etc/pacman.d/mirrorlist.orig
arch_chroot "pacman -Sy"


print_info "Change kernel modules  [https://wiki.archlinux.org/index.php/mkinitcpio]"

sed -i 's/^HOOKS=(.*)/HOOKS=(base udev keyboard keymap autodetect consolefont modconf block encrypt filesystems resume fsck)/' /mnt/etc/mkinitcpio.conf
sed -i 's/MODULES=()/MODULES=(ext4)/' /mnt/etc/mkinitcpio.conf
sed -i 's/FILES=()/FILES=(/crypto_keyfile.bin)/' /mnt/etc/mkinitcpio.conf

arch_chroot "mkinitcpio -P"
arch_chroot "chmod 600 /boot/initramfs-linux*"


print_info "Set root password  [https://wiki.archlinux.org/index.php/users_and_groups]"
arch_chroot "echo -e \"${ROOT_PW}\n${ROOT_PW}\" | passwd"


print_info "Create new user [https://wiki.archlinux.de/title/Sudo#sudo_f.C3.BCr_Benutzer_einrichten]"

arch_chroot "useradd -m -g users -G wheel,storage,power,network,uucp -s /bin/zsh ${NEWUSER}"
arch_chroot "echo -e \"${NEWUSER_PW}\n${NEWUSER_PW}\" | passwd ${NEWUSER}"

sed -i 's/# %wheel   ALL=(ALL) ALL/%wheel   ALL=(ALL) ALL/' /mnt/etc/sudoers


print_line

LuksUUID=$(blkid -s UUID -o value "${LUKS_DISK}")

swap_file_offset=$(filefrag -v /mnt/swapfile | awk '{ if($1=="0:"){print $4} }')


if [[ "$UEFI" == 1 ]]; then
  print_info "Installing EFI Boot-Manager  [https://wiki.archlinux.org/index.php/Systemd-boot#Installing_the_EFI_boot_manager]"
  arch_chroot "bootctl --path=/boot install"

  echo 'default arch' >/mnt/boot/loader/loader.conf

  cat <<EOF >/mnt/boot/loader/entries/arch.conf
title Arch Linux
linux /vmlinuz-linux
initrd /intel-ucode.img
initrd /initramfs-linux.img
options cryptdevice=UUID=${LuksUUID}:${DM_NAME} root=/dev/mapper/${DM_NAME} resume=/dev/mapper/${DM_NAME} resume_offset=${swap_file_offset} quiet rw
EOF

else
  print_info "Installing GRUB  [https://wiki.archlinux.org/index.php/GRUB]"
  pacstrap /mnt grub os-prober

  sed -i -e "s|GRUB_CMDLINE_LINUX=\"\(.\+\)\"|GRUB_CMDLINE_LINUX=\"cryptdevice=UUID=${LuksUUID}:${DM_NAME} root=/dev/mapper/${DM_NAME} resume=/dev/mapper/${DM_NAME} resume_offset=${swap_file_offset}\"|g" -e "s|GRUB_CMDLINE_LINUX=\"\"|GRUB_CMDLINE_LINUX=\"cryptdevice=UUID=${LuksUUID}:${DM_NAME} root=/dev/mapper/${DM_NAME} resume=/dev/mapper/${DM_NAME} resume_offset=${swap_file_offset}\"|g" /mnt/etc/default/grub
  sed -i 's/#GRUB_ENABLE_CRYPTODISK=y/GRUB_ENABLE_CRYPTODISK=y/' /mnt/etc/default/grub

  arch_chroot "grub-install $BOOT_MOUNTPOINT"
  arch_chroot "grub-mkconfig -o /boot/grub/grub.cfg"
fi


print_line

cecho "\n\nInstallation finished"
umount -R /mnt

cecho "Please run the post installation skript after reboot!"
cecho "It is located under ~/aui/postinstall.sh"
